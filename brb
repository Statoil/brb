#!/usr/bin/env python
from __future__ import print_function
from os.path import exists as path_exists
import logging
import lasio

def sluggify(token):
    return token.replace('/', '!').replace(' ', '_')

def wellname(las):
    return las.header['Well']['WELL'].value

def write(outname, df, keys):
    if path_exists(outname):
        exit('File %s exists, will not overwrite.' % outname)
    index_name = df.index.name  # the index column is not a regular column
    if index_name in keys:
        keys = [k for k in keys if k != index_name]
    for k in keys:
        if k not in df:
            logging.warn('No such column %s' % k)
    keys = [k for k in keys if k in df]
    df[keys].to_csv(outname)
    print('wrote %d rows to %s' % (len(df), outname))


def main(fname, keys):
    with open(fname, 'r') as f_:
        las = lasio.read(f_)

    try:
        name = sluggify(wellname(las))
    except:
        logging.warn('Unable to fetch wellname')
        name = fname
    df = las.df()
    write(name + '.csv', df, keys)

if __name__ == '__main__':
    from sys import argv
    if len(argv) < 2:
        exit('Usage: brb file.las [KEYS]')
    main(argv[1], argv[2:])
